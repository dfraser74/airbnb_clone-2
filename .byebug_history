c
n
params[:amenities]
exit
params[:amenities]
exit
n
params[:amenities]
continue
@search.amenities
Listing.has_amenity(@search.amenities)
c
continue
@search.amenities
c
continue
Listing.has_amenity(@search.amenities)
@search.amenities
c
continue
@search.amenities
c
continue
@search.has_amenity
c
n
params[:amenities]
continue
Listing.joins(:amenities).inspect
c
exit
Listing.joins(:amenities => :listings_amenities).inspect
c
exit
Listing.joins(:listings_amenities => :amenities).inspect
Listing.joins(:listings_amenities => :amenities)
:amenities
c
n
new_search
n
params[:amenities]
params[:search]
c
exit
@search.amenities.map(&:to_i)
@search.amenities
c
n
@search.amenities
c
n
new_search
n
exit
new_search.amenities.flatten
new_search.amenities
new_search.amenities.to_s
new_search.amenities
n
c
exit
    group("listings.id HAVING COUNT(listings.id) = #{amenities.count}")}exit
    where("amenities.id in (?)", amenities.collect(&:to_i)).
  scope :amenities, ->(amenity) { joins(:amenities).
    group("listings.id HAVING COUNT(listings.id) = #{amenities.count}")}
joins(:amenities).where("amenities.id in (?)", amenities.collect(&:to_i)).
@search.amenities
c
n
@search
params[:search]
c
n
new_search.save
new_search
n
exit
params[:amenities].values
test.values
test = params[:amenities]
test = params[:amenities].join(",")
test = params[:amenities].join(","0
test = params[:amenities].to_a
test = params[:amenities].to_s
params[:amenities]
a.split("")
b = a[0][1]
b = a[1][1]
b = a[1]
a = params[:amenities].to_a
params[:amenities].to_a
params[:amenities]
exit
@search
params[:search]
c
n
params[:amenities].each
params[:amenities].all
params[:amenities][0]
params[:amenities]
params[amenities]
exit
params[:amenities][0]
params[:amenities]
exit
params[:amenities]
new_search
n
exit
params[:amenities]
params[:search]
exit
params[:search]
exit
@search.amenities
exit
Listing.available.city(@search.city)
exit
Listing.available.city(@search.city)
Listing.available
@search
params[:search]
c
new_search
c
exit
new_search
n
self.high_price
self.high_price == 100000
n
high_price
n
low_price
n
available
c
exit
new_search
n
params[:search]
c
exit
@search
exit
params[:search]
params[:search[
params
params[:searches]
new_search
exit
Search.last
@search
exit
@search
params[:search]
c
exit
n
continue_check
n
exit
n
continue
n
c
n
remove
n
@new_reservation.save
c
@reservation.save
@reservation.id
@reservation
n
date
c
exit
date
@reservation
n
date
c
n
@reservation.check_in_date
@reservation.check_in_daate
date
exit
@reservation
n
date
n
@reservation.check_in_date
date
exit
params[:reservation][:check_in_date]
params[:check_in_date]
@reservation.check_in_date = Date.strptime(params[:check_in_date], '%d/%m/%Y')
@reservation
c
n
reservation.save
n
exit
reservation = Reservation.find(params[:reservation_id])
reservation
reservation.save!
reservation.save
reservation.payment_id = new_payment.id
reservation = Reservation.find(params[:reservation_id])
params
new_payment
c
reservation.save
n
reservation
n
reservation
n
exit
Reservation.last
n
update_reservation
c
update_reservation
c
exit
update_reservation
c
exit
Reservation.find(params[:reservation_id]).update(:payment_id =>  new_payment.id)
Reservation.find(params[:reservation_id]).update(payment_id: new_payment.id)
Reservation.find(params[:reservation_id]).payment_id
new_payment.id
Reservation.find(params[:reservation_id]).update(payment_id: new_payment.id)
Reservation.find(params[:reservation_id])
Reservation.find(params[:reservation_id]
update_reservation
n
update_reservation
n
new_payment
n
params
c
n
params
exit
n
params[:reservation_id]
new_payment
n
params
c
